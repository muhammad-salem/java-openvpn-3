/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.openvpn.ovpn3;

public class ovpncliJNI {
	public final static native long new_ServerEntryVector__SWIG_0();

	public final static native long new_ServerEntryVector__SWIG_1(long jarg1);

	public final static native long ServerEntryVector_size(long jarg1, ServerEntryVector jarg1_);

	public final static native long ServerEntryVector_capacity(long jarg1, ServerEntryVector jarg1_);

	public final static native void ServerEntryVector_reserve(long jarg1, ServerEntryVector jarg1_, long jarg2);

	public final static native boolean ServerEntryVector_isEmpty(long jarg1, ServerEntryVector jarg1_);

	public final static native void ServerEntryVector_clear(long jarg1, ServerEntryVector jarg1_);

	public final static native void ServerEntryVector_add(long jarg1, ServerEntryVector jarg1_, long jarg2,
			ServerEntry jarg2_);

	public final static native long ServerEntryVector_get(long jarg1, ServerEntryVector jarg1_, int jarg2);

	public final static native void ServerEntryVector_set(long jarg1, ServerEntryVector jarg1_, int jarg2, long jarg3,
			ServerEntry jarg3_);

	public final static native void delete_ServerEntryVector(long jarg1);

	public final static native long new_LLVector__SWIG_0();

	public final static native long new_LLVector__SWIG_1(long jarg1);

	public final static native long LLVector_size(long jarg1, LLVector jarg1_);

	public final static native long LLVector_capacity(long jarg1, LLVector jarg1_);

	public final static native void LLVector_reserve(long jarg1, LLVector jarg1_, long jarg2);

	public final static native boolean LLVector_isEmpty(long jarg1, LLVector jarg1_);

	public final static native void LLVector_clear(long jarg1, LLVector jarg1_);

	public final static native void LLVector_add(long jarg1, LLVector jarg1_, long jarg2);

	public final static native long LLVector_get(long jarg1, LLVector jarg1_, int jarg2);

	public final static native void LLVector_set(long jarg1, LLVector jarg1_, int jarg2, long jarg3);

	public final static native void delete_LLVector(long jarg1);

	public final static native boolean ExternalPKIBase_sign(long jarg1, ExternalPKIBase jarg1_, String jarg2,
			long jarg3);

	public final static native void delete_ExternalPKIBase(long jarg1);

	public final static native boolean TunBuilderBase_tun_builder_new(long jarg1, TunBuilderBase jarg1_);

	public final static native boolean TunBuilderBase_tun_builder_set_layer(long jarg1, TunBuilderBase jarg1_,
			int jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_remote_address(long jarg1, TunBuilderBase jarg1_,
			String jarg2, boolean jarg3);

	public final static native boolean TunBuilderBase_tun_builder_add_address(long jarg1, TunBuilderBase jarg1_,
			String jarg2, int jarg3, String jarg4, boolean jarg5, boolean jarg6);

	public final static native boolean TunBuilderBase_tun_builder_set_route_metric_default(long jarg1,
			TunBuilderBase jarg1_, int jarg2);

	public final static native boolean TunBuilderBase_tun_builder_reroute_gw(long jarg1, TunBuilderBase jarg1_,
			boolean jarg2, boolean jarg3, long jarg4);

	public final static native boolean TunBuilderBase_tun_builder_add_route(long jarg1, TunBuilderBase jarg1_,
			String jarg2, int jarg3, int jarg4, boolean jarg5);

	public final static native boolean TunBuilderBase_tun_builder_exclude_route(long jarg1, TunBuilderBase jarg1_,
			String jarg2, int jarg3, int jarg4, boolean jarg5);

	public final static native boolean TunBuilderBase_tun_builder_add_dns_server(long jarg1, TunBuilderBase jarg1_,
			String jarg2, boolean jarg3);

	public final static native boolean TunBuilderBase_tun_builder_add_search_domain(long jarg1, TunBuilderBase jarg1_,
			String jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_mtu(long jarg1, TunBuilderBase jarg1_, int jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_session_name(long jarg1, TunBuilderBase jarg1_,
			String jarg2);

	public final static native boolean TunBuilderBase_tun_builder_add_proxy_bypass(long jarg1, TunBuilderBase jarg1_,
			String jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_proxy_auto_config_url(long jarg1,
			TunBuilderBase jarg1_, String jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_proxy_http(long jarg1, TunBuilderBase jarg1_,
			String jarg2, int jarg3);

	public final static native boolean TunBuilderBase_tun_builder_set_proxy_https(long jarg1, TunBuilderBase jarg1_,
			String jarg2, int jarg3);

	public final static native boolean TunBuilderBase_tun_builder_add_wins_server(long jarg1, TunBuilderBase jarg1_,
			String jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_block_ipv6(long jarg1, TunBuilderBase jarg1_,
			boolean jarg2);

	public final static native boolean TunBuilderBase_tun_builder_set_adapter_domain_suffix(long jarg1,
			TunBuilderBase jarg1_, String jarg2);

	public final static native int TunBuilderBase_tun_builder_establish(long jarg1, TunBuilderBase jarg1_);

	public final static native boolean TunBuilderBase_tun_builder_persist(long jarg1, TunBuilderBase jarg1_);

	public final static native void TunBuilderBase_tun_builder_establish_lite(long jarg1, TunBuilderBase jarg1_);

	public final static native void TunBuilderBase_tun_builder_teardown(long jarg1, TunBuilderBase jarg1_,
			boolean jarg2);

	public final static native void delete_TunBuilderBase(long jarg1);

	public final static native long new_TunBuilderBase();

	public final static native void ServerEntry_server_set(long jarg1, ServerEntry jarg1_, String jarg2);

	public final static native String ServerEntry_server_get(long jarg1, ServerEntry jarg1_);

	public final static native void ServerEntry_friendlyName_set(long jarg1, ServerEntry jarg1_, String jarg2);

	public final static native String ServerEntry_friendlyName_get(long jarg1, ServerEntry jarg1_);

	public final static native long new_ServerEntry();

	public final static native void delete_ServerEntry(long jarg1);

	public final static native void EvalConfig_error_set(long jarg1, EvalConfig jarg1_, boolean jarg2);

	public final static native boolean EvalConfig_error_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_message_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_message_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_userlockedUsername_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_userlockedUsername_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_profileName_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_profileName_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_friendlyName_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_friendlyName_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_autologin_set(long jarg1, EvalConfig jarg1_, boolean jarg2);

	public final static native boolean EvalConfig_autologin_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_externalPki_set(long jarg1, EvalConfig jarg1_, boolean jarg2);

	public final static native boolean EvalConfig_externalPki_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_staticChallenge_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_staticChallenge_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_staticChallengeEcho_set(long jarg1, EvalConfig jarg1_, boolean jarg2);

	public final static native boolean EvalConfig_staticChallengeEcho_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_privateKeyPasswordRequired_set(long jarg1, EvalConfig jarg1_,
			boolean jarg2);

	public final static native boolean EvalConfig_privateKeyPasswordRequired_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_allowPasswordSave_set(long jarg1, EvalConfig jarg1_, boolean jarg2);

	public final static native boolean EvalConfig_allowPasswordSave_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_remoteHost_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_remoteHost_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_remotePort_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_remotePort_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_remoteProto_set(long jarg1, EvalConfig jarg1_, String jarg2);

	public final static native String EvalConfig_remoteProto_get(long jarg1, EvalConfig jarg1_);

	public final static native void EvalConfig_serverList_set(long jarg1, EvalConfig jarg1_, long jarg2,
			ServerEntryVector jarg2_);

	public final static native long EvalConfig_serverList_get(long jarg1, EvalConfig jarg1_);

	public final static native long new_EvalConfig();

	public final static native void delete_EvalConfig(long jarg1);

	public final static native void ProvideCreds_username_set(long jarg1, ProvideCreds jarg1_, String jarg2);

	public final static native String ProvideCreds_username_get(long jarg1, ProvideCreds jarg1_);

	public final static native void ProvideCreds_password_set(long jarg1, ProvideCreds jarg1_, String jarg2);

	public final static native String ProvideCreds_password_get(long jarg1, ProvideCreds jarg1_);

	public final static native void ProvideCreds_response_set(long jarg1, ProvideCreds jarg1_, String jarg2);

	public final static native String ProvideCreds_response_get(long jarg1, ProvideCreds jarg1_);

	public final static native void ProvideCreds_dynamicChallengeCookie_set(long jarg1, ProvideCreds jarg1_,
			String jarg2);

	public final static native String ProvideCreds_dynamicChallengeCookie_get(long jarg1, ProvideCreds jarg1_);

	public final static native void ProvideCreds_replacePasswordWithSessionID_set(long jarg1, ProvideCreds jarg1_,
			boolean jarg2);

	public final static native boolean ProvideCreds_replacePasswordWithSessionID_get(long jarg1, ProvideCreds jarg1_);

	public final static native void ProvideCreds_cachePassword_set(long jarg1, ProvideCreds jarg1_, boolean jarg2);

	public final static native boolean ProvideCreds_cachePassword_get(long jarg1, ProvideCreds jarg1_);

	public final static native long new_ProvideCreds();

	public final static native void delete_ProvideCreds(long jarg1);

	public final static native void SessionToken_username_set(long jarg1, SessionToken jarg1_, String jarg2);

	public final static native String SessionToken_username_get(long jarg1, SessionToken jarg1_);

	public final static native void SessionToken_session_id_set(long jarg1, SessionToken jarg1_, String jarg2);

	public final static native String SessionToken_session_id_get(long jarg1, SessionToken jarg1_);

	public final static native long new_SessionToken();

	public final static native void delete_SessionToken(long jarg1);

	public final static native void DynamicChallenge_challenge_set(long jarg1, DynamicChallenge jarg1_, String jarg2);

	public final static native String DynamicChallenge_challenge_get(long jarg1, DynamicChallenge jarg1_);

	public final static native void DynamicChallenge_echo_set(long jarg1, DynamicChallenge jarg1_, boolean jarg2);

	public final static native boolean DynamicChallenge_echo_get(long jarg1, DynamicChallenge jarg1_);

	public final static native void DynamicChallenge_responseRequired_set(long jarg1, DynamicChallenge jarg1_,
			boolean jarg2);

	public final static native boolean DynamicChallenge_responseRequired_get(long jarg1, DynamicChallenge jarg1_);

	public final static native void DynamicChallenge_stateID_set(long jarg1, DynamicChallenge jarg1_, String jarg2);

	public final static native String DynamicChallenge_stateID_get(long jarg1, DynamicChallenge jarg1_);

	public final static native long new_DynamicChallenge();

	public final static native void delete_DynamicChallenge(long jarg1);

	public final static native long new_KeyValue__SWIG_0();

	public final static native long new_KeyValue__SWIG_1(String jarg1, String jarg2);

	public final static native void KeyValue_key_set(long jarg1, KeyValue jarg1_, String jarg2);

	public final static native String KeyValue_key_get(long jarg1, KeyValue jarg1_);

	public final static native void KeyValue_value_set(long jarg1, KeyValue jarg1_, String jarg2);

	public final static native String KeyValue_value_get(long jarg1, KeyValue jarg1_);

	public final static native void delete_KeyValue(long jarg1);

	public final static native void Config_content_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_content_get(long jarg1, Config jarg1_);

	public final static native void Config_contentList_set(long jarg1, Config jarg1_, long jarg2);

	public final static native long Config_contentList_get(long jarg1, Config jarg1_);

	public final static native void Config_guiVersion_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_guiVersion_get(long jarg1, Config jarg1_);

	public final static native void Config_serverOverride_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_serverOverride_get(long jarg1, Config jarg1_);

	public final static native void Config_protoOverride_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_protoOverride_get(long jarg1, Config jarg1_);

	public final static native void Config_ipv6_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_ipv6_get(long jarg1, Config jarg1_);

	public final static native void Config_connTimeout_set(long jarg1, Config jarg1_, int jarg2);

	public final static native int Config_connTimeout_get(long jarg1, Config jarg1_);

	public final static native void Config_tunPersist_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_tunPersist_get(long jarg1, Config jarg1_);

	public final static native void Config_googleDnsFallback_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_googleDnsFallback_get(long jarg1, Config jarg1_);

	public final static native void Config_autologinSessions_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_autologinSessions_get(long jarg1, Config jarg1_);

	public final static native void Config_externalPkiAlias_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_externalPkiAlias_get(long jarg1, Config jarg1_);

	public final static native void Config_disableClientCert_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_disableClientCert_get(long jarg1, Config jarg1_);

	public final static native void Config_sslDebugLevel_set(long jarg1, Config jarg1_, int jarg2);

	public final static native int Config_sslDebugLevel_get(long jarg1, Config jarg1_);

	public final static native void Config_compressionMode_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_compressionMode_get(long jarg1, Config jarg1_);

	public final static native void Config_privateKeyPassword_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_privateKeyPassword_get(long jarg1, Config jarg1_);

	public final static native void Config_defaultKeyDirection_set(long jarg1, Config jarg1_, int jarg2);

	public final static native int Config_defaultKeyDirection_get(long jarg1, Config jarg1_);

	public final static native void Config_forceAesCbcCiphersuites_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_forceAesCbcCiphersuites_get(long jarg1, Config jarg1_);

	public final static native void Config_tlsVersionMinOverride_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_tlsVersionMinOverride_get(long jarg1, Config jarg1_);

	public final static native void Config_tlsCertProfileOverride_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_tlsCertProfileOverride_get(long jarg1, Config jarg1_);

	public final static native void Config_peerInfo_set(long jarg1, Config jarg1_, long jarg2);

	public final static native long Config_peerInfo_get(long jarg1, Config jarg1_);

	public final static native void Config_proxyHost_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_proxyHost_get(long jarg1, Config jarg1_);

	public final static native void Config_proxyPort_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_proxyPort_get(long jarg1, Config jarg1_);

	public final static native void Config_proxyUsername_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_proxyUsername_get(long jarg1, Config jarg1_);

	public final static native void Config_proxyPassword_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_proxyPassword_get(long jarg1, Config jarg1_);

	public final static native void Config_proxyAllowCleartextAuth_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_proxyAllowCleartextAuth_get(long jarg1, Config jarg1_);

	public final static native void Config_altProxy_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_altProxy_get(long jarg1, Config jarg1_);

	public final static native void Config_dco_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_dco_get(long jarg1, Config jarg1_);

	public final static native void Config_echo_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_echo_get(long jarg1, Config jarg1_);

	public final static native void Config_info_set(long jarg1, Config jarg1_, boolean jarg2);

	public final static native boolean Config_info_get(long jarg1, Config jarg1_);

	public final static native void Config_clockTickMS_set(long jarg1, Config jarg1_, long jarg2);

	public final static native long Config_clockTickMS_get(long jarg1, Config jarg1_);

	public final static native void Config_gremlinConfig_set(long jarg1, Config jarg1_, String jarg2);

	public final static native String Config_gremlinConfig_get(long jarg1, Config jarg1_);

	public final static native long new_Config();

	public final static native void delete_Config(long jarg1);

	public final static native void Event_error_set(long jarg1, Event jarg1_, boolean jarg2);

	public final static native boolean Event_error_get(long jarg1, Event jarg1_);

	public final static native void Event_fatal_set(long jarg1, Event jarg1_, boolean jarg2);

	public final static native boolean Event_fatal_get(long jarg1, Event jarg1_);

	public final static native void Event_name_set(long jarg1, Event jarg1_, String jarg2);

	public final static native String Event_name_get(long jarg1, Event jarg1_);

	public final static native void Event_info_set(long jarg1, Event jarg1_, String jarg2);

	public final static native String Event_info_get(long jarg1, Event jarg1_);

	public final static native long new_Event();

	public final static native void delete_Event(long jarg1);

	public final static native void ConnectionInfo_defined_set(long jarg1, ConnectionInfo jarg1_, boolean jarg2);

	public final static native boolean ConnectionInfo_defined_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_user_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_user_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_serverHost_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_serverHost_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_serverPort_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_serverPort_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_serverProto_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_serverProto_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_serverIp_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_serverIp_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_vpnIp4_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_vpnIp4_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_vpnIp6_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_vpnIp6_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_gw4_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_gw4_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_gw6_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_gw6_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_clientIp_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_clientIp_get(long jarg1, ConnectionInfo jarg1_);

	public final static native void ConnectionInfo_tunName_set(long jarg1, ConnectionInfo jarg1_, String jarg2);

	public final static native String ConnectionInfo_tunName_get(long jarg1, ConnectionInfo jarg1_);

	public final static native long new_ConnectionInfo();

	public final static native void delete_ConnectionInfo(long jarg1);

	public final static native void Status_error_set(long jarg1, Status jarg1_, boolean jarg2);

	public final static native boolean Status_error_get(long jarg1, Status jarg1_);

	public final static native void Status_status_set(long jarg1, Status jarg1_, String jarg2);

	public final static native String Status_status_get(long jarg1, Status jarg1_);

	public final static native void Status_message_set(long jarg1, Status jarg1_, String jarg2);

	public final static native String Status_message_get(long jarg1, Status jarg1_);

	public final static native long new_Status();

	public final static native void delete_Status(long jarg1);

	public final static native long new_LogInfo__SWIG_0();

	public final static native long new_LogInfo__SWIG_1(String jarg1);

	public final static native void LogInfo_text_set(long jarg1, LogInfo jarg1_, String jarg2);

	public final static native String LogInfo_text_get(long jarg1, LogInfo jarg1_);

	public final static native void delete_LogInfo(long jarg1);

	public final static native void InterfaceStats_bytesIn_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_bytesIn_get(long jarg1, InterfaceStats jarg1_);

	public final static native void InterfaceStats_packetsIn_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_packetsIn_get(long jarg1, InterfaceStats jarg1_);

	public final static native void InterfaceStats_errorsIn_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_errorsIn_get(long jarg1, InterfaceStats jarg1_);

	public final static native void InterfaceStats_bytesOut_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_bytesOut_get(long jarg1, InterfaceStats jarg1_);

	public final static native void InterfaceStats_packetsOut_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_packetsOut_get(long jarg1, InterfaceStats jarg1_);

	public final static native void InterfaceStats_errorsOut_set(long jarg1, InterfaceStats jarg1_, long jarg2);

	public final static native long InterfaceStats_errorsOut_get(long jarg1, InterfaceStats jarg1_);

	public final static native long new_InterfaceStats();

	public final static native void delete_InterfaceStats(long jarg1);

	public final static native void TransportStats_bytesIn_set(long jarg1, TransportStats jarg1_, long jarg2);

	public final static native long TransportStats_bytesIn_get(long jarg1, TransportStats jarg1_);

	public final static native void TransportStats_bytesOut_set(long jarg1, TransportStats jarg1_, long jarg2);

	public final static native long TransportStats_bytesOut_get(long jarg1, TransportStats jarg1_);

	public final static native void TransportStats_packetsIn_set(long jarg1, TransportStats jarg1_, long jarg2);

	public final static native long TransportStats_packetsIn_get(long jarg1, TransportStats jarg1_);

	public final static native void TransportStats_packetsOut_set(long jarg1, TransportStats jarg1_, long jarg2);

	public final static native long TransportStats_packetsOut_get(long jarg1, TransportStats jarg1_);

	public final static native void TransportStats_lastPacketReceived_set(long jarg1, TransportStats jarg1_, int jarg2);

	public final static native int TransportStats_lastPacketReceived_get(long jarg1, TransportStats jarg1_);

	public final static native long new_TransportStats();

	public final static native void delete_TransportStats(long jarg1);

	public final static native void MergeConfig_status_set(long jarg1, MergeConfig jarg1_, String jarg2);

	public final static native String MergeConfig_status_get(long jarg1, MergeConfig jarg1_);

	public final static native void MergeConfig_errorText_set(long jarg1, MergeConfig jarg1_, String jarg2);

	public final static native String MergeConfig_errorText_get(long jarg1, MergeConfig jarg1_);

	public final static native void MergeConfig_basename_set(long jarg1, MergeConfig jarg1_, String jarg2);

	public final static native String MergeConfig_basename_get(long jarg1, MergeConfig jarg1_);

	public final static native void MergeConfig_profileContent_set(long jarg1, MergeConfig jarg1_, String jarg2);

	public final static native String MergeConfig_profileContent_get(long jarg1, MergeConfig jarg1_);

	public final static native void MergeConfig_refPathList_set(long jarg1, MergeConfig jarg1_, long jarg2);

	public final static native long MergeConfig_refPathList_get(long jarg1, MergeConfig jarg1_);

	public final static native long new_MergeConfig();

	public final static native void delete_MergeConfig(long jarg1);

	public final static native void ExternalPKIRequestBase_error_set(long jarg1, ExternalPKIRequestBase jarg1_,
			boolean jarg2);

	public final static native boolean ExternalPKIRequestBase_error_get(long jarg1, ExternalPKIRequestBase jarg1_);

	public final static native void ExternalPKIRequestBase_errorText_set(long jarg1, ExternalPKIRequestBase jarg1_,
			String jarg2);

	public final static native String ExternalPKIRequestBase_errorText_get(long jarg1, ExternalPKIRequestBase jarg1_);

	public final static native void ExternalPKIRequestBase_invalidAlias_set(long jarg1, ExternalPKIRequestBase jarg1_,
			boolean jarg2);

	public final static native boolean ExternalPKIRequestBase_invalidAlias_get(long jarg1,
			ExternalPKIRequestBase jarg1_);

	public final static native void ExternalPKIRequestBase_alias_set(long jarg1, ExternalPKIRequestBase jarg1_,
			String jarg2);

	public final static native String ExternalPKIRequestBase_alias_get(long jarg1, ExternalPKIRequestBase jarg1_);

	public final static native long new_ExternalPKIRequestBase();

	public final static native void delete_ExternalPKIRequestBase(long jarg1);

	public final static native void ExternalPKICertRequest_cert_set(long jarg1, ExternalPKICertRequest jarg1_,
			String jarg2);

	public final static native String ExternalPKICertRequest_cert_get(long jarg1, ExternalPKICertRequest jarg1_);

	public final static native void ExternalPKICertRequest_supportingChain_set(long jarg1,
			ExternalPKICertRequest jarg1_, String jarg2);

	public final static native String ExternalPKICertRequest_supportingChain_get(long jarg1,
			ExternalPKICertRequest jarg1_);

	public final static native long new_ExternalPKICertRequest();

	public final static native void delete_ExternalPKICertRequest(long jarg1);

	public final static native void ExternalPKISignRequest_data_set(long jarg1, ExternalPKISignRequest jarg1_,
			String jarg2);

	public final static native String ExternalPKISignRequest_data_get(long jarg1, ExternalPKISignRequest jarg1_);

	public final static native void ExternalPKISignRequest_sig_set(long jarg1, ExternalPKISignRequest jarg1_,
			String jarg2);

	public final static native String ExternalPKISignRequest_sig_get(long jarg1, ExternalPKISignRequest jarg1_);

	public final static native long new_ExternalPKISignRequest();

	public final static native void delete_ExternalPKISignRequest(long jarg1);

	public final static native void RemoteOverride_host_set(long jarg1, RemoteOverride jarg1_, String jarg2);

	public final static native String RemoteOverride_host_get(long jarg1, RemoteOverride jarg1_);

	public final static native void RemoteOverride_ip_set(long jarg1, RemoteOverride jarg1_, String jarg2);

	public final static native String RemoteOverride_ip_get(long jarg1, RemoteOverride jarg1_);

	public final static native void RemoteOverride_port_set(long jarg1, RemoteOverride jarg1_, String jarg2);

	public final static native String RemoteOverride_port_get(long jarg1, RemoteOverride jarg1_);

	public final static native void RemoteOverride_proto_set(long jarg1, RemoteOverride jarg1_, String jarg2);

	public final static native String RemoteOverride_proto_get(long jarg1, RemoteOverride jarg1_);

	public final static native long new_RemoteOverride();

	public final static native void delete_RemoteOverride(long jarg1);

	public final static native long new_OpenVPNClient();

	public final static native void delete_OpenVPNClient(long jarg1);

	public final static native void OpenVPNClient_init_process();

	public final static native void OpenVPNClient_uninit_process();

	public final static native long OpenVPNClient_merge_config_static(String jarg1, boolean jarg2);

	public final static native long OpenVPNClient_merge_config_string_static(String jarg1);

	public final static native long OpenVPNClient_eval_config_static(long jarg1, Config jarg1_);

	public final static native int OpenVPNClient_max_profile_size();

	public final static native boolean OpenVPNClient_parse_dynamic_challenge(String jarg1, long jarg2,
			DynamicChallenge jarg2_);

	public final static native long OpenVPNClient_eval_config(long jarg1, OpenVPNClient jarg1_, long jarg2,
			Config jarg2_);

	public final static native long OpenVPNClient_provide_creds(long jarg1, OpenVPNClient jarg1_, long jarg2,
			ProvideCreds jarg2_);

	public final static native boolean OpenVPNClient_socket_protect(long jarg1, OpenVPNClient jarg1_, int jarg2);

	public final static native long OpenVPNClient_connect(long jarg1, OpenVPNClient jarg1_);

	public final static native long OpenVPNClient_connection_info(long jarg1, OpenVPNClient jarg1_);

	public final static native boolean OpenVPNClient_session_token(long jarg1, OpenVPNClient jarg1_, long jarg2,
			SessionToken jarg2_);

	public final static native void OpenVPNClient_stop(long jarg1, OpenVPNClient jarg1_);

	public final static native void OpenVPNClient_pause(long jarg1, OpenVPNClient jarg1_, String jarg2);

	public final static native void OpenVPNClient_resume(long jarg1, OpenVPNClient jarg1_);

	public final static native void OpenVPNClient_reconnect(long jarg1, OpenVPNClient jarg1_, int jarg2);

	public final static native boolean OpenVPNClient_pause_on_connection_timeout(long jarg1, OpenVPNClient jarg1_);

	public final static native int OpenVPNClient_stats_n();

	public final static native String OpenVPNClient_stats_name(int jarg1);

	public final static native long OpenVPNClient_stats_value(long jarg1, OpenVPNClient jarg1_, int jarg2);

	public final static native long OpenVPNClient_stats_bundle(long jarg1, OpenVPNClient jarg1_);

	public final static native long OpenVPNClient_tun_stats(long jarg1, OpenVPNClient jarg1_);

	public final static native long OpenVPNClient_transport_stats(long jarg1, OpenVPNClient jarg1_);

	public final static native void OpenVPNClient_post_cc_msg(long jarg1, OpenVPNClient jarg1_, String jarg2);

	public final static native void OpenVPNClient_event(long jarg1, OpenVPNClient jarg1_, long jarg2, Event jarg2_);

	public final static native void OpenVPNClient_log(long jarg1, OpenVPNClient jarg1_, long jarg2, LogInfo jarg2_);

	public final static native void OpenVPNClient_external_pki_cert_request(long jarg1, OpenVPNClient jarg1_,
			long jarg2, ExternalPKICertRequest jarg2_);

	public final static native void OpenVPNClient_external_pki_sign_request(long jarg1, OpenVPNClient jarg1_,
			long jarg2, ExternalPKISignRequest jarg2_);

	public final static native boolean OpenVPNClient_remote_override_enabled(long jarg1, OpenVPNClient jarg1_);

	public final static native boolean OpenVPNClient_remote_override_enabledSwigExplicitOpenVPNClient(long jarg1,
			OpenVPNClient jarg1_);

	public final static native void OpenVPNClient_remote_override(long jarg1, OpenVPNClient jarg1_, long jarg2,
			RemoteOverride jarg2_);

	public final static native void OpenVPNClient_remote_overrideSwigExplicitOpenVPNClient(long jarg1,
			OpenVPNClient jarg1_, long jarg2, RemoteOverride jarg2_);

	public final static native void OpenVPNClient_clock_tick(long jarg1, OpenVPNClient jarg1_);

	public final static native void OpenVPNClient_clock_tickSwigExplicitOpenVPNClient(long jarg1, OpenVPNClient jarg1_);

	public final static native String OpenVPNClient_crypto_self_test();

	public final static native int OpenVPNClient_app_expire();

	public final static native String OpenVPNClient_platform();

	public final static native String OpenVPNClient_copyright();

	public final static native void OpenVPNClient_director_connect(OpenVPNClient obj, long cptr, boolean mem_own,
			boolean weak_global);

	public final static native void OpenVPNClient_change_ownership(OpenVPNClient obj, long cptr,
			boolean take_or_release);

	public final static native long ExternalPKICertRequest_SWIGUpcast(long jarg1);

	public final static native long ExternalPKISignRequest_SWIGUpcast(long jarg1);

	public final static native long OpenVPNClient_SWIGUpcast(long jarg1);

	public static boolean SwigDirector_OpenVPNClient_tun_builder_new(OpenVPNClient jself) {
		return jself.tun_builder_new();
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_layer(OpenVPNClient jself, int layer) {
		return jself.tun_builder_set_layer(layer);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_remote_address(OpenVPNClient jself, String address,
			boolean ipv6) {
		return jself.tun_builder_set_remote_address(address, ipv6);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_address(OpenVPNClient jself, String address,
			int prefix_length, String gateway, boolean ipv6, boolean net30) {
		return jself.tun_builder_add_address(address, prefix_length, gateway, ipv6, net30);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_route_metric_default(OpenVPNClient jself,
			int metric) {
		return jself.tun_builder_set_route_metric_default(metric);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_reroute_gw(OpenVPNClient jself, boolean ipv4,
			boolean ipv6, long flags) {
		return jself.tun_builder_reroute_gw(ipv4, ipv6, flags);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_route(OpenVPNClient jself, String address,
			int prefix_length, int metric, boolean ipv6) {
		return jself.tun_builder_add_route(address, prefix_length, metric, ipv6);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_exclude_route(OpenVPNClient jself, String address,
			int prefix_length, int metric, boolean ipv6) {
		return jself.tun_builder_exclude_route(address, prefix_length, metric, ipv6);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_dns_server(OpenVPNClient jself, String address,
			boolean ipv6) {
		return jself.tun_builder_add_dns_server(address, ipv6);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_search_domain(OpenVPNClient jself, String domain) {
		return jself.tun_builder_add_search_domain(domain);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_mtu(OpenVPNClient jself, int mtu) {
		return jself.tun_builder_set_mtu(mtu);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_session_name(OpenVPNClient jself, String name) {
		return jself.tun_builder_set_session_name(name);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_proxy_bypass(OpenVPNClient jself,
			String bypass_host) {
		return jself.tun_builder_add_proxy_bypass(bypass_host);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_proxy_auto_config_url(OpenVPNClient jself,
			String url) {
		return jself.tun_builder_set_proxy_auto_config_url(url);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_proxy_http(OpenVPNClient jself, String host,
			int port) {
		return jself.tun_builder_set_proxy_http(host, port);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_proxy_https(OpenVPNClient jself, String host,
			int port) {
		return jself.tun_builder_set_proxy_https(host, port);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_add_wins_server(OpenVPNClient jself, String address) {
		return jself.tun_builder_add_wins_server(address);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_block_ipv6(OpenVPNClient jself,
			boolean block_ipv6) {
		return jself.tun_builder_set_block_ipv6(block_ipv6);
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_set_adapter_domain_suffix(OpenVPNClient jself,
			String name) {
		return jself.tun_builder_set_adapter_domain_suffix(name);
	}

	public static int SwigDirector_OpenVPNClient_tun_builder_establish(OpenVPNClient jself) {
		return jself.tun_builder_establish();
	}

	public static boolean SwigDirector_OpenVPNClient_tun_builder_persist(OpenVPNClient jself) {
		return jself.tun_builder_persist();
	}

	public static void SwigDirector_OpenVPNClient_tun_builder_establish_lite(OpenVPNClient jself) {
		jself.tun_builder_establish_lite();
	}

	public static void SwigDirector_OpenVPNClient_tun_builder_teardown(OpenVPNClient jself, boolean disconnect) {
		jself.tun_builder_teardown(disconnect);
	}

	public static boolean SwigDirector_OpenVPNClient_socket_protect(OpenVPNClient jself, int socket) {
		return jself.socket_protect(socket);
	}

	public static boolean SwigDirector_OpenVPNClient_pause_on_connection_timeout(OpenVPNClient jself) {
		return jself.pause_on_connection_timeout();
	}

	public static void SwigDirector_OpenVPNClient_event(OpenVPNClient jself, long arg0) {
		jself.event(new Event(arg0, false));
	}

	public static void SwigDirector_OpenVPNClient_log(OpenVPNClient jself, long arg0) {
		jself.log(new LogInfo(arg0, false));
	}

	public static void SwigDirector_OpenVPNClient_external_pki_cert_request(OpenVPNClient jself, long arg0) {
		jself.external_pki_cert_request(new ExternalPKICertRequest(arg0, false));
	}

	public static void SwigDirector_OpenVPNClient_external_pki_sign_request(OpenVPNClient jself, long arg0) {
		jself.external_pki_sign_request(new ExternalPKISignRequest(arg0, false));
	}

	public static boolean SwigDirector_OpenVPNClient_remote_override_enabled(OpenVPNClient jself) {
		return jself.remote_override_enabled();
	}

	public static void SwigDirector_OpenVPNClient_remote_override(OpenVPNClient jself, long arg0) {
		jself.remote_override(new RemoteOverride(arg0, false));
	}

	public static void SwigDirector_OpenVPNClient_clock_tick(OpenVPNClient jself) {
		jself.clock_tick();
	}

	private final static native void swig_module_init();

	static {
		swig_module_init();
	}
}
